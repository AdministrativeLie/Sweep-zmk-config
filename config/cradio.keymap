// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        NUM {
            bindings = <&mo 2>;
            key-positions = <5 6>;
            layers = <0 2>;
        };

        APPGUI {
            bindings = <&kp LEFT_GUI>;
            key-positions = <25 26>;
            layers = <0 1 2 3>;
        };

        CRT {
            bindings = <&kp LCTRL>;
            key-positions = <26 27>;
            layers = <0 3 2 1 4>;
        };

        ALT {
            bindings = <&kp LEFT_ALT>;
            key-positions = <27 28>;
            layers = <0 1 2 3>;
        };

        LOOP {
            bindings = <&kp LA(RCTRL)>;
            key-positions = <26 27 28>;
        };

        cmd2 {
            bindings = <&kp LEFT_GUI>;
            key-positions = <24 23>;
            layers = <0 1 2 3>;
        };

        crt2 {
            bindings = <&kp LCTRL>;
            key-positions = <23 22>;
            layers = <0 3 2 1>;
        };

        opt2 {
            bindings = <&kp LEFT_ALT>;
            key-positions = <22 21>;
            layers = <0 1 2 3>;
        };

        combo2 {
            bindings = <&kp LA(RCTRL)>;
            key-positions = <21 22 23>;
        };

        symbs {
            bindings = <&mo 3>;
            key-positions = <15 16>;
            layers = <0 3 1 2 4>;
        };

        fn {
            bindings = <&mo 4>;
            key-positions = <16 17>;
            layers = <0 3 1 2 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE1 {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y          &kp U      &kp I      &kp O     &kp SEMICOLON
&kp A  &kp S  &kp D  &kp F      &kp G        &kp H          &kp J      &kp K      &kp L     &kp P
&kp Z  &kp X  &kp C  &kp V      &kp B        &kp N          &kp M      &kp MINUS  &kp FSLH  &mo 1
                     &kp LSHFT  &kp SPACE    &kp BACKSPACE  &kp ENTER
            >;
        };

        ARROW {
            bindings = <
&kp ESC   &kp LC(LEFT)  &kp UP    &kp LC(RIGHT)  &kp F9    &none       &kp C_VOLUME_DOWN  &kp K_MUTE        &kp C_VOLUME_UP  &none
&kp TAB   &kp LEFT      &kp DOWN  &kp RIGHT      &none     &none       &kp K_PREV         &kp K_PLAY_PAUSE  &kp C_NEXT       &trans
&kp CAPS  &none         &none     &none          &none     &kp LGUI    &kp LCTRL          &kp LALT          &none            &none
                                  &trans         &trans    &kp DELETE  &trans
            >;
        };

        NUM {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4     &kp N5       &none     &none    &kp LGUI   &none  &none
&kp N6  &kp N7  &kp N8  &kp N9     &kp N0       &none     &none    &kp LCTRL  &none  &none
&none   &none   &none   &none      &none        &none     &none    &kp LALT   &none  &none
                        &kp LSHFT  &kp SPACE    &kp BSPC  &kp RET
            >;
        };

        SYMB {
            bindings = <
&kp GRAVE  &kp EQUAL  &kp COMMA  &kp DOT    &none        &none     &none    &kp LGUI   &none   &none
&kp BSLH   &kp APOS   &kp LBKT   &kp RBKT   &none        &none     &none    &kp LCTRL  &trans  &trans
&none      &none      &none      &none      &none        &none     &none    &kp LALT   &none   &none
                                 &kp LSHFT  &kp SPACE    &kp BSPC  &kp RET
            >;
        };

        layer_4 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &none   &none   &none  &none  &none
&kp F6  &kp F7  &kp F8  &kp F9  &kp F10    &none   &none   &none  &none  &none
&none   &none   &none   &none   &none      &none   &none   &none  &none  &none
                        &trans  &trans     &trans  &trans
            >;
        };
    };
};
