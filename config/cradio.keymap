// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        letter_R {
            bindings = <&kp Q>;
            key-positions = <2 3>;
            layers = <0>;
        };

        letter_u {
            bindings = <&kp J>;
            key-positions = <6 7>;
            layers = <0>;
        };

        arrows {
            bindings = <&mo 3>;
            key-positions = <19 10>;
            layers = <0 2 1 3 4>;
        };

        gui1 {
            bindings = <&kp LEFT_GUI>;
            key-positions = <6 16>;
            layers = <0 1 3 4>;
        };

        gui2 {
            bindings = <&kp LEFT_GUI>;
            key-positions = <13 3>;
            layers = <0 1 3 4>;
        };

        crtl1 {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <1 11>;
            layers = <0 1 3 4>;
        };

        crtl2 {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <8 18>;
            layers = <0 1 3 4>;
        };

        alt1 {
            bindings = <&kp LEFT_ALT>;
            key-positions = <7 17>;
            layers = <0 1 3 4>;
        };

        alt2 {
            bindings = <&kp LEFT_ALT>;
            key-positions = <2 12>;
            layers = <0 1 3 4>;
        };
    };

    macros {
        mpApp: mpApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(A) &kp P &kp P>;
            label = "MPAPP";
        };

        mpDoc: mpDoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(D) &kp O &kp C>;
            label = "MPDOC";
        };

        open: open {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp P &kp E &kp N>;
            label = "OPEN";
        };

        ls: ls {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp S>;
            label = "LS";
        };

        cd: cd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp D>;
            label = "CD";
        };

        onepass: onepass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(A) &kp P &kp P &kp SPACE &kp N1 &kp LS(P) &kp A &kp S &kp S &kp W &kp O &kp R &kp D>;
            label = "ONEPASS";
        };

        icloud: icloud {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp LS(C) &kp L &kp O &kp U &kp D>;
            label = "ICLOUD";
        };

        code: code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp D &kp E>;
            label = "CODE";
        };

        browse: browse {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(B) &kp R &kp O &kp W &kp S &kp E &kp R>;
            label = "BROWSE";
        };

        cmd: cmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(N0))>;
            label = "CMD";
        };

        closecmd: closecmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(W)>;
            label = "CLOSECMD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qet {
            bindings = <
&trans  &kp E   &kp R   &kp T    &trans       &trans         &kp I      &kp O   &kp L   &trans
&mo 1   &kp A   &kp S   &kp D    &trans       &trans         &kp H      &kp K   &kp P   &mo 2
&trans  &trans  &trans  &trans   &none        &none          &trans     &trans  &trans  &trans
                        &kp RET  &kp SPACE    &kp BACKSPACE  &kp LSHFT
            >;
        };

        zcb {
            bindings = <
&trans  &kp W   &kp F   &kp V   &trans    &trans  &kp Y   &kp U   &kp G   &trans
&trans  &kp Z   &kp X   &kp C   &trans    &trans  &kp B   &kp N   &kp M   &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        arrows {
            bindings = <
&trans  &kp ESC    &kp TAB   &kp CAPS  &trans    &trans  &kp LEFT  &kp UP    &kp RIGHT  &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &trans    &trans  &mo 4     &kp DOWN  &mo 5      &trans
&trans  &trans     &trans    &trans    &trans    &trans  &trans    &trans    &trans     &trans
                             &trans    &trans    &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3    &trans    &trans  &kp N6    &kp N7  &kp N8  &trans
&trans  &kp N4  &kp N5  &kp LBKT  &trans    &trans  &kp RBKT  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans    &trans    &trans  &trans    &trans  &trans  &trans
                        &trans    &trans    &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp LBKT  &kp RBKT  &kp BSLH  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI  &kp SQT   &kp FSLH  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans    &trans  &trans  &trans  &trans  &trans
                            &trans    &trans    &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &kp GRAVE  &kp MINUS  &kp EQUAL  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &kp COMMA  &kp DOT    &kp FSLH   &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans
                              &trans     &trans    &trans  &trans
            >;
        };
    };
};
