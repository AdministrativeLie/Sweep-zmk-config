// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        layer3switch {
            bindings = <&mo 3>;
            key-positions = <30 33>;
            timeout-ms = <0>;
            layers = <0 1 2 3 4 5>;
        };

        layer-4 {
            bindings = <&mo 4>;
            key-positions = <20 29>;
            layers = <4 0 1 2 3 5>;
        };
    };

    macros {
        mpApp: mpApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(A) &kp P &kp P>;
            label = "MPAPP";
        };

        mpDoc: mpDoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(D) &kp O &kp C>;
            label = "MPDOC";
        };

        open: open {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp P &kp E &kp N>;
            label = "OPEN";
        };

        ls: ls {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp S>;
            label = "LS";
        };

        cd: cd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp D>;
            label = "CD";
        };

        onepass: onepass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(A) &kp P &kp P &kp SPACE &kp N1 &kp LS(P) &kp A &kp S &kp S &kp W &kp O &kp R &kp D>;
            label = "ONEPASS";
        };

        icloud: icloud {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp LS(C) &kp L &kp O &kp U &kp D>;
            label = "ICLOUD";
        };

        code: code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp D &kp E>;
            label = "CODE";
        };

        browse: browse {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(B) &kp R &kp O &kp W &kp S &kp E &kp R>;
            label = "BROWSE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp LS(QMARK)
&kp Z  &kp X  &kp C  &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &none
                     &mo 1  &kp SPACE    &kp LSHFT  &mo 2
            >;
        };

        layer_1 {
            bindings = <
&kp N1              &kp N2               &kp N3     &kp N4        &kp N5          &kp N6                   &kp N7         &kp N8      &kp N9        &kp N0
&kp ESC             &kp TAB              &kp LCTRL  &kp LALT      &kp LGUI        &kp LC(LA(KP_NUMBER_0))  &kp LG(SLASH)  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP
&kp RC(LEFT_ARROW)  &kp RC(RIGHT_ARROW)  &kp F9     &bt BT_SEL 0  &bt BT_SEL 1    &kp CAPS                 &tog 4         &tog 5      &kp LC(C)     &kp DEL
                                                    &trans        &trans          &kp BSPC                 &trans
            >;
        };

        layer_2 {
            bindings = <
&kp LS(EXCL)   &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(PLUS)   &kp EQUAL
&kp LS(TILDE)  &kp BSLH    &kp LS(PIPE)   &kp LS(LT)    &kp LS(GT)       &kp SQT        &kp LS(DQT)   &kp MINUS     &kp LS(UNDER)  &kp FSLH
&kp GRAVE      &kp SEMI    &kp LBKT       &kp LS(LBRC)  &kp LS(LPAR)     &kp LS(RPAR)   &kp LS(RBRC)  &kp RBKT      &kp LS(COLON)  &kp BSPC
                                          &trans        &kp ENTER        &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&kp LG(LS(N5))  &mpApp     &mpDoc     &browse    &onepass     &icloud    &code           &kp UP_ARROW    &kp LG(A)        &kp LG(LA(S))
&kp SPACE       &kp TAB    &kp LCTRL  &kp LALT   &kp LGUI     &kp LG(W)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LSHFT
&kp LG(Z)       &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(S)    &open      &cd             &ls             &kp ESC          &kp BSPC
                                      &trans     &trans       &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
&kp Q  &kp W  &kp E  &kp R   &kp T        &kp Y     &kp U     &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F   &kp G        &kp H     &kp J     &kp K      &kp L    &kp LSHFT
&kp Z  &kp X  &kp C  &kp V   &kp B        &kp N     &kp M     &kp COMMA  &kp DOT  &kp RET
                     &tog 4  &kp LCTRL    &kp LALT  &kp LGUI
            >;
        };

        layer_5 {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &none   &none   &none     &none   &none   &none   &none   &none
&none    &none    &none   &none   &none     &none   &none   &none   &none   &none
                          &to 5   &none     &none   &none
            >;
        };
    };
};
